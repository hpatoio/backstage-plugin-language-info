name: Release

on:
  push:
    branches:
      - "main"
      - "releases/**"

jobs:
  release:
    runs-on: ubuntu-latest
    if: (contains(github.event.head_commit.message, '[release]'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Get version from lerna.json
        id: get_version
        run: echo "VERSION=$(jq -r .version lerna.json)" >> $GITHUB_OUTPUT

      - name: Create Release Tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.get_version.outputs.VERSION }}';

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${version}`,
              sha: context.sha
            });

            console.log(`Created tag: ${version}`);

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: yarn install

      - name: Run TypeScript
        run: yarn tsc:full

      - name: Build the plugin
        run: yarn build

      - name: Publish to npm.js
        run: yarn publish:npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
